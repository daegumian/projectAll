
==================================================

*는 필수 표시

==================================================

ignIn (로그인) 

URL
POST /apiv1/auth/sigh-in

Header

- request
{
  *email : String,
  *password : String
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
  token : "jwt...",
  expiredDate : 123456789
}

<실패>

-  필수 정보 미입력

- 로그인 <실패>
Http Status - 401 (Unauthorized)

{
  code : "SF",
  message : "Sign In Failed."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}


==================================================

singnUp (회원가입)

URL
POST /apiv1/auth/sigh-up

Header


- request

{
  *email : String,
  *password : String,
  *nickname : String,
  *telNumber : String, (0을 받기위해 문자열로 받는다.)
  *address : String,
  addressDetail :String
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
}

<실패>

-  필수 정보 미입력/ 이메일 포멧 불일치 / 비밀번호 8자리 미만 / 전화번호 포맷 불일치

- 이메일 중복
Http Status - 400 (Bad request)

{
  code : "EE",
  message : "Existed Email."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

currentList (최신 게시물 리스트)

URL
GET /api/v1/board/current-list/{pageNumber}


Header


- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  currentList : BoardListItem[]
}

BoardListItem
{
  boardNumber : int,
  title : String,
  content : String,
  boardTitleImage : String,
  favoriteCount : int,
  commentCount : int,
  viewCount : int,
  writeDatetime : String,
  writerNickname : String,
  writerProfileImage : String
}

<실패>
- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

weeklyTop3 (주간 상위 3 게시물 리스트)

URL
GET /api/v1/board/top-3


Header


- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  top3List : BoardListItem[]
}

BoardListItem
{
  boardNumber : int,
  title : String,
  content : String,
  boardTitleImage : String,
  favoriteCount : int,
  commentCount : int,
  viewCount : int,
  writeDatetime : String,
  writerNickname : String,
  writerProfileImage : String
}

<실패>
- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================
serchList (검색 게시물 리스트)

URL
GET /api/v1/board/serch-list/{searchWord}


Header


- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  serchList : BoardListItem[]
}

BoardListItem
{
  boardNumber : int,
  title : String,
  content : String,
  boardTitleImage : String,
  favoriteCount : int,
  commentCount : int,
  viewCount : int,
  writeDatetime : String,
  writerNickname : String,
  writerProfileImage : String
}

<실패>
- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

userBoardList (특정 유저 게시물 리스트)

URL
GET /api/v1/board/user-board/{email}


Header

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  boardList : BoardListItem[]
}

BoardListItem
{
  boardNumber : int,
  title : String,
  content : String,
  boardTitleImage : String,
  favoriteCount : int,
  commentCount : int,
  viewCount : int,
  writeDatetime : String,
  writerNickname : String,
  writerProfileImage : String
}

<실패>

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
  code : "NU",
  message : "No Existed User"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

popularWordList (인기 검색어 리스트)

URL
GET /api/v1/search/popular-list

Header

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  popularWordList : String[]
}

<실패>
- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

relativeWordList (관련 검색어 리스트)

URL
GET /api/v1/search/{searchWord}/relation-list

Header

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  relativeWordList : string[]
}

<실패>
- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}
==================================================

boardDetail (게시물 상세)

URL
GET /api/v1/board/{boardNumber}


Header


- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  boardNumber : int,
  title : String,
  content : String,
  boardImage : string[],
  writeDatetime : String,
  writerEmail : String,
  writerNickname : String,
  writerProfileImage : String
}

<실패>
- 존재하지 않는 게시물

Http Status - 400 (Bad Request)
{
  code : "NB",
  message : "No Existed Board Number."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

favoriteList (좋아요 리스트)

URL
GET /api/v1/board/{boardNumber}/favorite-list


Header


- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  favoriteList : FavoriteListItem[]
}

FavoriteListItem{
  email : string,
  nickname : string,
  profileImage : string
}


<실패>
- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

putFavorite (좋아요 기능)

URL
PUT /api/v1/board/{boardNumber}/favorite

Header
Name / value
Authorization / Bearer Token


- request
{
  boardNumber : int
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
}


<실패>

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

commentList (댓글 리스트)

URL
GET /api/v1/board/{boardNumber}/comment-list


Header


- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
  commentList : CommentListItem[]
}

commentListItem{
  email: string,
  nickname: string,
  writeDatetime: string,
  content: string
}

<실패>
- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

postComment (댓글 쓰기)

URL
POST /api/v1/board/{boardNumber}/comment

Header
Name / value
Authorization / Bearer Token


- request

{
  *content:string
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
}

<실패>

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
  code : "NB",
  message : "No Existed Board"
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
  code : "NU",
  message : "No Existed User"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

boardDelete (게시물 삭제)


URL
DELETE /api/v1/board/{boardNumber}

Header
Name / value
Authorization / Bearer Token


- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
}

<실패>

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
  code : "NB",
  message : "No Existed Board"
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
  code : "NU",
  message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
  code : "NP",
  message : "No Permmision."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

boardWrite (게시물 쓰기)

URL
POST /api/v1/board

Header
Name / value
Authorization / Bearer Token


- request

{
  *title: string,
  *content: string,
  boardImageList: string[]
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
}

<실패>

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
  code : "NU",
  message : "No Existed User"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}


==================================================

boardUpdate (게시물 수정)

URL
PATCH /api/v1/board/{boardNumber}

Header
Name / value
Authorization / Bearer Token


- request

{
  *title: string,
  *content: string,
  boardImageList: string[]
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
}

<실패>

- 존재하지 않는 게시물
Http Status - 400 (Bad Request)
{
  code : "NB",
  message : "No Existed Board"
}

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
  code : "NU",
  message : "No Existed User"
}

- 권한 없음
Http Status - 403 (Forbidden)
{
  code : "NP",
  message : "No Permmision."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

getUser (유저 정보 불러오기)

URL
GET /api/v1/user/{email}

Header

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
  email : string,
  nickname : string,
  profileImage : null
}

<실패>

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
  code : "NU",
  message : "No Existed User"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

loginUser (로그인 유저)

URL
GET /api/v1/user

Header
Name / value
Authorization / Bearer Token

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success."
  email : string,
  nickname : string,
  profileImage : null
}

<실패>

- 존재하지 않는 유저
Http Status - 400 (Bad Request)
{
  code : "NU",
  message : "No Existed User"
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

patchNickname (닉네임 수정)

URL
PATCH /api/v1/user/nickname

Header
Name / value
Authorization / Bearer Token

- request

{
  *nickname : string,
  
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
}

<실패>
- 유효성 검사 실패
Http Status - 400 (Bad Request)

{
    "code": "VF",
    "message": "Validation failed."
}

- 중복되는 닉네임
Http Status - 401 (Unauthorized) 

{
    "code": "NU",
    "message": "This user does not exist."
}

-존재하지 않는 유저
Http Status - 401 (Unauthorized) 

{
    "code": "AF",
    "message": "Authorization Failed."
}

-인증실패
Http Status - 401 (Unauthorized) 

{
    "code": "AF",
    "message": "Authorization Failed."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}


==================================================

patchProfileImage (프로필 이미지 수정)

URL
PATCH /api/v1/user/profile-image

Header
Name / value
Authorization / Bearer Token


- request

{
  *profileImage : string,
  
}

- response

<성공>
Http Status - 200(OK)
{
  code : "SU",
  message : "Success.",
}

<실패>

-존재하지 않는 유저
Http Status - 401 (Unauthorized) 

{
    "code": "AF",
    "message": "Authorization Failed."
}

-인증실패
Http Status - 401 (Unauthorized) 

{
    "code": "AF",
    "message": "Authorization Failed."
}

- 데이터베이스 에러
Http Status - 500 (Internal Server Error)
{
  code : "DE",
  message : "Database Error"
}

==================================================

fileUpload (파일 업로드)

==================================================

getFile (파일 불러오기)

==================================================